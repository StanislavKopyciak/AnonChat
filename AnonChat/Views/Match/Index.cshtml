@using AnonChat.Models.Enum.Category
@{
    ViewBag.Title = "Знайти співрозмовника";
}

<div class="container match-container">
    <h1>Знайти співрозмовника</h1>

    <div class="form-group">
        <label for="category">Категорія:</label>
        <select id="category">
            @foreach (var category in Enum.GetValues(typeof(CategoryType)).Cast<CategoryType>())
            {
                <option value="@((int)category)">@category</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="sex">Стать:</label>
        <select id="sex">
            @foreach (var sex in Enum.GetValues(typeof(CategorySex)).Cast<CategorySex>())
            {
                <option value="@((int)sex)">@sex</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="age">Вік:</label>
        <select id="age">
            @foreach (var age in Enum.GetValues(typeof(CategoryAge)).Cast<CategoryAge>())
            {
                <option value="@((int)age)">@age</option>
            }
        </select>
    </div>


    <button id="findMatchBtn">Знайти співрозмовника</button>
    <button id="cancelBtn">Скасувати</button>

    <div id="status" class="status-text"></div>
</div>


<style>
    .match-container {
        max-width: 500px;
        margin: 50px auto;
        text-align: center;
        font-family: Arial, sans-serif;
    }

    .form-group {
        margin-bottom: 15px;
    }

    select, button {
        padding: 10px;
        font-size: 16px;
        width: 100%;
        box-sizing: border-box;
    }

    button {
        margin-top: 10px;
        cursor: pointer;
    }

    .status-text {
        margin-top: 20px;
        font-weight: bold;
        color: green;
    }
</style>

<script>
    let pollingInterval;
    let searching = false;

    const statusDiv = document.getElementById('status');

    document.getElementById('findMatchBtn').addEventListener('click', () => {
        searching = true;
        statusDiv.textContent = 'Waiting...';

        const category = document.getElementById('category').value;
        const sex = document.getElementById('sex').value;
        const age = document.getElementById('age').value;

        pollingInterval = setInterval(async () => {
            if (!searching) return;

            try {
                const response = await fetch('/Match/FindMatch', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ category, sex, age })
                });

                const data = await response.json();

                if (data.success) {
                    clearInterval(pollingInterval);
                    searching = false;
                    statusDiv.textContent = `Співрозмовник знайдений`;
                    window.location.href = `/Chat/Index?matchId=${data.matchId}`;
                }
            } catch (err) {
                console.error(err);
            }
        }, 2000);
    });

    document.getElementById('cancelBtn').addEventListener('click', async () => {
        searching = false;
        clearInterval(pollingInterval);
        statusDiv.textContent = 'Offline';

        try {
            await fetch('/Match/CancelSearch', { method: 'POST' });
        } catch (err) {
            console.error(err);
        }
    });
</script>
